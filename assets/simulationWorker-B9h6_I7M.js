(function(){"use strict";const j=Object.freeze([{hour:0,residential:.12,commercial:.15,industrial:1,community:.43},{hour:1,residential:.08,commercial:.15,industrial:1,community:.15},{hour:2,residential:.08,commercial:.15,industrial:1,community:.15},{hour:3,residential:.12,commercial:.15,industrial:1,community:.15},{hour:4,residential:.12,commercial:.15,industrial:1,community:.15},{hour:5,residential:.22,commercial:.15,industrial:1,community:.25},{hour:6,residential:.3,commercial:.15,industrial:1,community:.43},{hour:7,residential:.5,commercial:.15,industrial:1,community:.58},{hour:8,residential:.38,commercial:.55,industrial:1,community:.65},{hour:9,residential:.32,commercial:1,industrial:1,community:.65},{hour:10,residential:.32,commercial:1,industrial:1,community:.65},{hour:11,residential:.38,commercial:1,industrial:1,community:.65},{hour:12,residential:.4,commercial:1,industrial:1,community:.65},{hour:13,residential:.55,commercial:1,industrial:1,community:.65},{hour:14,residential:.48,commercial:1,industrial:1,community:.65},{hour:15,residential:.3,commercial:1,industrial:1,community:.65},{hour:16,residential:.3,commercial:1,industrial:1,community:.65},{hour:17,residential:.3,commercial:1,industrial:1,community:.75},{hour:18,residential:.55,commercial:.82,industrial:1,community:.84},{hour:19,residential:1,commercial:.65,industrial:1,community:1},{hour:20,residential:.78,commercial:.55,industrial:1,community:1},{hour:21,residential:.55,commercial:.15,industrial:1,community:1},{hour:22,residential:.48,commercial:.15,industrial:1,community:1},{hour:23,residential:.22,commercial:.15,industrial:1,community:.75}]),z=Object.freeze(["Commercial","Residential","Industrial","Community"]),W=Object.freeze({residential:.9,commercial:.8,industrial:.75,community:.85}),X=Object.freeze({residential:1,commercial:.95,industrial:.9,community:.95}),U=Object.freeze({residential:.01,commercial:.02,industrial:.02,community:.01}),K=.85,Q=1,Z=.05,Y=.7,x=.3,G=24,r={isEnabled:!1,logLevel:"debug",log:function(...M){this.isEnabled&&["debug","info","error"].includes(this.logLevel)&&console.log(...M)},info:function(...M){this.isEnabled&&["info","debug"].includes(this.logLevel)&&console.info("INFO: ",...M)},error:function(...M){this.isEnabled&&["error","info","debug"].includes(this.logLevel)&&console.error("ERROR: ",...M)}};self.onmessage=function(M){try{r.log("Worker received message: ",M.data);const o=M.data;let T=Object.freeze({activeFeederBreakers:o.totalFeederBreakers,remainingESSEnergy:o.singleESSEnergy*o.essModuleCount,essChargeState:1,loadPowerFactor:.9,loadVariation:.95});const k=Array.from({length:o.simulationTime},(J,t)=>{try{const O=E({...T,variables:o,index:t});return T=Object.freeze({...T,remainingESSEnergy:O.remainingESSEnergy,activeFeederBreakers:O.activeFeederBreakers,essChargeState:O.essChargeState,loadPowerFactor:O.loadPowerFactor,loadVariation:O.loadVariation}),O}catch(O){throw console.error("Error in computeValue at index ${index}: ",O.message),O}});self.postMessage(k)}catch(o){r.error("Error in simulation worker: ",o.message),self.postMessage({error:o.message})}};function c(M,o){return M===0&&o===0?0:Math.sqrt(M**2/(M**2+o**2))}function E({activeFeederBreakers:M,remainingESSEnergy:o,essChargeState:T,loadPowerFactor:k,loadVariation:J,variables:t,index:O}){r.log("Index: ",O),r.log("Peak Load: ",t.peakLoad),r.log("Active Feeder Breakers: ",M),r.log("Total Feeder Breakers: ",t.totalFeederBreakers);let F=0,A=1,d=0,D=k;const $=t.loadProfile,H=Math.max(K,Math.min((1-Math.random()*2)*Z+J,Q));switch($){case z[0]:r.log("Commercial Load Profile"),F=U.commercial,A=X.commercial,d=j[Math.floor(O/t.granularity)%G].commercial*t.peakLoad*H/t.totalFeederBreakers,D=Math.max(W.commercial,Math.min((1-Math.random()*2)*F+k,A));break;case z[1]:r.log("Residential Load Profile"),F=U.residential,A=X.residential,d=j[Math.floor(O/t.granularity)%G].residential*t.peakLoad*H/t.totalFeederBreakers,D=Math.max(W.residential,Math.min((1-Math.random()*2)*F+k,A));break;case z[2]:r.log("Industrial Load Profile"),F=U.industrial,A=X.industrial,d=j[Math.floor(O/t.granularity)%G].industrial*t.peakLoad*H/t.totalFeederBreakers,D=Math.max(W.industrial,Math.min((1-Math.random()*2)*F+k,A));break;case z[3]:r.log("Community Load Profile"),F=U.community,A=X.community,d=j[Math.floor(O/t.granularity)%G].community*t.peakLoad*H/t.totalFeederBreakers,D=Math.max(W.community,Math.min((1-Math.random()*2)*F+k,A));break;default:throw r.error("Invalid load profile: ",$),new Error("Invalid load profile: ",$)}const R=d*M;let i=R;r.log("Real Load: ",R);const m=Math.sqrt((R/k)**2-R**2),S=Math.max(Math.sin((O%(G*t.granularity)-6*t.granularity)*15*Math.PI/(180*t.granularity)),0),l=t.peakPVPower*S*t.cloudingFactor;let y=0,f=M;const u=t.singleESSEnergy*t.essModuleCount,g=t.singleESSPeakPower*t.essModuleCount;let n=0,e=0,a=o,L=0,I=T,C=0,V=0,N=0;const p=t.singleGensetPower*t.gensetCount,B=t.singleGensetPower*.3,q=t.singleGensetPower*.7;let s=0,w=0,h=0,P=0,_=0;return r.log("availablePVPower: ",l),r.log("activeFeederBreakers: ",M),r.log("realLoad: ",R),r.log("remainingESSEnergy: ",o),t.utility?(r.log("Utility is available"),f=t.totalFeederBreakers,R<l?(r.log("realLoad < availablePVPower"),o<u?(n=m,e=-Math.min(l-R,g),a=o-1/t.granularity*e,L=c(e,n),a>u&&(a=u),l-R+e>0&&(C=-Math.min(l-R+e,t.utilityExportLimit),V=0,N=c(C,V)),y=R-e-C):(C=-Math.min(l-R,t.utilityExportLimit),V=m,N=c(C,V),y=R-C)):(r.log("not enough PV to cover the load"),l<=0?(r.log("no PV power available"),a<u?(r.log("no PV power and ESS not charged"),e=-Math.min(g,(u-o)*t.granularity),n=0,L=c(e,n),C=R+Math.min(g,(u-o)*t.granularity),V=m,N=c(C,V),a=o+1/t.granularity*g,a>u&&(a=u)):(C=R,V=m),N=c(C,V)):(r.log("PV and utility both available"),R-l<g&&o/u>x?(y=l,e=Math.min(R-l,o*t.granularity),n=m,L=c(e,n),a=o-1/t.granularity*e,C=0,V=0):(y=l,C=R-l,V=m,N=c(C,V))))):(r.log("No utility power available"),t.gensetCount===0?(r.log("No gensets, only PV and energy storage"),M<t.totalFeederBreakers&&(r.log("activeFeederBreakers < variables.totalFeederBreakers"),(l-i>=d||o>0&&l+g-i>=d)&&(f++,i=f*d)),i<l?o<u?(n=m,e=-Math.min(l-i,g,(u-o)*t.granularity),L=c(e,n),a=o-1/t.granularity*e,a>u&&(a=u),y=i-e):(y=i,e=0,n=m,L=c(e,n)):(r.log("less PV than the load requires"),o<=0?(r.log("ESS is discharged, shed load"),f=Math.floor(l/d),i=f*d,y=i,e=0,n=m,L=c(e,n)):i>l+g||i>l+o*t.granularity?(r.log("not enough capacity between the PV and ESS to support the load, shed load"),f=Math.floor(Math.min(l+g,l+o*t.granularity)/d),i=f*d,y=l,e=Math.min(i-l,o*t.granularity),n=m,L=c(e,n),a=o-1/t.granularity*e):(r.log("PV and energy storage is sufficient to power load"),y=l,e=i-l,n=m,L=c(e,n),a=o-1/t.granularity*e))):t.gensetCount>0&&t.essModuleCount===0?(r.log("Generator sets only, no ESS"),s=i-l,M<t.totalFeederBreakers&&l+p-R>=d&&(f++,i=f*d),s<=0?(w=1,y=Math.max(i-B,0),h=B,P=m,_=c(h,P)):(r.log("not enough PV to power load"),s>p&&(f=Math.floor((l+p)/d),i=f*d),w=Math.min(t.gensetCount,Math.ceil(s/q)),h=Math.max(w*B,s),y=Math.max(i-h,0),P=m,_=c(h,P))):t.gensetCount>0&&t.essModuleCount>0&&(r.log("Gensets, PV, and energy storage"),o>0&&M<t.totalFeederBreakers?l+p+g-i>=d&&(f++,i=f*d):M<t.totalFeederBreakers&&l+p-i>=d&&(f++,i=f*d),s=i-l,s<=0?(r.log("more PV than the load requires, run on PV and ESS"),w=0,o<u?(n=m,e=-Math.min(l-i,g,(u-o)*t.granularity),L=c(e,n),a=o-1/t.granularity*e,a>u&&(a=u),y=i-e,h=0,P=0,_=0,a/u>Y&&(I=1)):(r.log("ESS does not require charging"),y=i,e=0,n=m,L=c(e,n),h=0,h=0,P=0,_=0)):(r.log("PV does not have enough power to run the load, run on PV + genset and/or energy storage"),T===1?s<o*t.granularity&&s<g?(r.log("ESS can cover the load"),w=0,n=m,e=s,L=c(e,n),a=o-1/t.granularity*e,y=i-e,h=0,P=0,_=0,a/u<x&&(I=0)):(r.log("ESS can't cover complete load, use genset and/or ESS"),s>p+g&&s>p+o*t.granularity&&(f=Math.floor((l+p+g)/d),i=f*d),w=Math.min(t.gensetCount,Math.ceil(s/q)),s/w<g&&s/w<o*t.granularity?(r.log("ESS can offset one genset"),w--,h=Math.max(B,s-g,s-o),P=m-m/w,_=c(h,P),e=s-h,n=m-P,L=c(e,n),a=o-1/t.granularity*e,a/u<x&&(I=0),y=i-h-e):s>p?(r.log("more power than the gensets can support, run ESS"),w=t.gensetCount,h=i-l-g,P=m*h/R,_=c(h,P),e=Math.min(g,o*t.granularity),n=m-P,L=c(e,n),a=o-1/t.granularity*e,a/u<x&&(I=0),y=i-h-e):(r.log("run on genset only and recharge the ESS"),w=Math.min(t.gensetCount,Math.ceil(s/q)),e=-Math.min(g,(u-o)*t.granularity,w*t.singleGensetPower-s),n=0,L=c(e,n),h=Math.max(w*B,s)-e,y=Math.max(i-h,0),P=m,_=c(h,P),a=o-1/t.granularity*e,a>u&&(a=u),o/u>Y&&(I=1))):(r.log("ESS Charge State = 0, run on PV + Gensets"),s>p&&(o>0?(s>p+Math.min(g,o*t.granularity)&&(f=Math.floor(l+p+Math.min(g,o*t.granularity)/d),i=f*d),w=t.gensetCount,h=i-l-Math.min(g,o),P=m*h/i,_=c(h,P),e=Math.min(g,o*t.granularity),n=m-P,L=c(e,n),a=o-1/t.granularity*e,a/u<x&&(I=0)):(f=Math.floor(l+p/d),i=f*d)),w=Math.min(t.gensetCount,Math.ceil(s/q)),e=-Math.min(g,(u-o)*t.granularity,w*t.singleGensetPower-s),n=0,L=c(e,n),h=Math.max(w*B,s)-e,y=i-s,P=m,_=c(h,P),a=o-1/t.granularity*e,a>u&&(a=u),a/u>Y&&(I=1))))),r.log("essRealPowerContribution: ",e),r.log("essReactivePowerContribution: ",n),r.log("newRemainingESSEnergy: ",a),r.log("newActiveFeederBreakers: ",f),r.log("gensetRealPowerRequirement: ",s),r.log("gensetsRequired: ",w),r.log("nextGensetOnlinePower: ",q),{index:O,activeFeederBreakers:f,remainingESSEnergy:a,totalESSEnergy:u,totalGensetPower:p,essChargeState:T,realLoad:i,loadPowerFactor:D,loadVariation:H,reactiveLoad:m,availablePVPower:l,providedPVPower:y,essReactivePowerContribution:n,essRealPowerContribution:e,essPowerFactor:L,utilityRealPowerContribution:C,utilityReactivePowerContribution:V,utilityPowerFactor:N,providedPVPower:y,gensetRealPowerContribution:h,gensetReactivePowerContribution:P,gensetPowerFactor:_,gensetsRequired:w,essChargeState:I}}})();
