(function(){"use strict";const q=Object.freeze([{hour:0,residential:.12,commercial:.15,industrial:1,community:.43},{hour:1,residential:.08,commercial:.15,industrial:1,community:.15},{hour:2,residential:.08,commercial:.15,industrial:1,community:.15},{hour:3,residential:.12,commercial:.15,industrial:1,community:.15},{hour:4,residential:.12,commercial:.15,industrial:1,community:.15},{hour:5,residential:.22,commercial:.15,industrial:1,community:.25},{hour:6,residential:.3,commercial:.15,industrial:1,community:.43},{hour:7,residential:.5,commercial:.15,industrial:1,community:.58},{hour:8,residential:.38,commercial:.55,industrial:1,community:.65},{hour:9,residential:.32,commercial:1,industrial:1,community:.65},{hour:10,residential:.32,commercial:1,industrial:1,community:.65},{hour:11,residential:.38,commercial:1,industrial:1,community:.65},{hour:12,residential:.4,commercial:1,industrial:1,community:.65},{hour:13,residential:.55,commercial:1,industrial:1,community:.65},{hour:14,residential:.48,commercial:1,industrial:1,community:.65},{hour:15,residential:.3,commercial:1,industrial:1,community:.65},{hour:16,residential:.3,commercial:1,industrial:1,community:.65},{hour:17,residential:.3,commercial:1,industrial:1,community:.75},{hour:18,residential:.55,commercial:.82,industrial:1,community:.84},{hour:19,residential:1,commercial:.65,industrial:1,community:1},{hour:20,residential:.78,commercial:.55,industrial:1,community:1},{hour:21,residential:.55,commercial:.15,industrial:1,community:1},{hour:22,residential:.48,commercial:.15,industrial:1,community:1},{hour:23,residential:.22,commercial:.15,industrial:1,community:.75}]),j=Object.freeze(["Commercial","Residential","Industrial","Community"]),z=Object.freeze({residential:.9,commercial:.8,industrial:.75,community:.85}),W=Object.freeze({residential:1,commercial:.95,industrial:.9,community:.95}),X=Object.freeze({residential:.01,commercial:.02,industrial:.02,community:.01}),J=.85,K=1,Q=.05,U=.7,B=.3,x=24,r={isEnabled:!1,logLevel:"debug",log:function(...f){this.isEnabled&&["debug","info","error"].includes(this.logLevel)&&console.log(...f)},info:function(...f){this.isEnabled&&["info","debug"].includes(this.logLevel)&&console.info("INFO: ",...f)},error:function(...f){this.isEnabled&&["error","info","debug"].includes(this.logLevel)&&console.error("ERROR: ",...f)}};self.onmessage=function(f){try{console.log("Worker received message: ",f.data);const o=f.data;let I=Object.freeze({activeFeederBreakers:o.totalFeederBreakers,remainingESSEnergy:o.singleESSEnergy*o.essModuleCount,essChargeState:1,loadPowerFactor:.9,loadVariation:.95});const _=Array.from({length:o.simulationTime},($,t)=>{try{const y=Z({...I,variables:o,index:t});return I=Object.freeze({...I,remainingESSEnergy:y.remainingESSEnergy,activeFeederBreakers:y.activeFeederBreakers,essChargeState:y.essChargeState,loadPowerFactor:y.loadPowerFactor,loadVariation:y.loadVariation}),y}catch(y){throw console.error("Error in computeValue at index ${index}: ",y.message),y}});self.postMessage(_)}catch(o){r.error("Error in simulation worker: ",o.message),self.postMessage({error:o.message})}};function c(f,o){return f===0&&o===0?0:Math.sqrt(f**2/(f**2+o**2))}function Z({activeFeederBreakers:f,remainingESSEnergy:o,essChargeState:I,loadPowerFactor:_,loadVariation:$,variables:t,index:y}){r.log("Index: ",y),r.log("Peak Load: ",t.peakLoad),r.log("Active Feeder Breakers: ",f),r.log("Total Feeder Breakers: ",t.totalFeederBreakers);let k=0,F=1,R=0,G=_;const Y=t.loadProfile,D=Math.max(J,Math.min((1-Math.random()*2)*Q+$,K));switch(Y){case j[0]:r.log("Commercial Load Profile"),k=X.commercial,F=W.commercial,R=q[Math.floor(y/t.granularity)%x].commercial*t.peakLoad*D/t.totalFeederBreakers,G=Math.max(z.commercial,Math.min((1-Math.random()*2)*k+_,F));break;case j[1]:r.log("Residential Load Profile"),k=X.residential,F=W.residential,R=q[Math.floor(y/t.granularity)%x].residential*t.peakLoad*D/t.totalFeederBreakers,G=Math.max(z.residential,Math.min((1-Math.random()*2)*k+_,F));break;case j[2]:r.log("Industrial Load Profile"),k=X.industrial,F=W.industrial,R=q[Math.floor(y/t.granularity)%x].industrial*t.peakLoad*D/t.totalFeederBreakers,G=Math.max(z.industrial,Math.min((1-Math.random()*2)*k+_,F));break;case j[3]:r.log("Community Load Profile"),k=X.community,F=W.community,R=q[Math.floor(y/t.granularity)%x].community*t.peakLoad*D/t.totalFeederBreakers,G=Math.max(z.community,Math.min((1-Math.random()*2)*k+_,F));break;default:throw r.error("Invalid load profile: ",Y),new Error("Invalid load profile: ",Y)}const i=R*f;r.log("Real Load: ",i);const d=Math.sqrt((i/_)**2-i**2),E=Math.max(Math.sin((y%(x*t.granularity)-6*t.granularity)*15*Math.PI/(180*t.granularity)),0),l=t.peakPVPower*E*t.cloudingFactor;let M=0,O=f;const u=t.singleESSEnergy*t.essModuleCount,h=t.singleESSPeakPower*t.essModuleCount;let n=0,e=0,a=o,w=0,A=I,L=0,p=0,T=0;const C=t.singleGensetPower*t.gensetCount,N=t.singleGensetPower*.3,H=t.singleGensetPower*.7;let s=0,P=0,m=0,g=0,V=0;return r.log("availablePVPower: ",l),r.log("activeFeederBreakers: ",f),r.log("realLoad: ",i),r.log("remainingESSEnergy: ",o),t.utility?(r.log("Utility is available"),O=t.totalFeederBreakers,i<l?(r.log("realLoad < availablePVPower"),o<u?(n=d,e=-Math.min(l-i,h),a=o-1/t.granularity*e,w=c(e,n),a>u&&(a=u),l-i+e>0&&(L=-Math.min(l-i+e,t.utilityExportLimit),p=0,T=c(L,p)),M=i-e-L):(L=-Math.min(l-i,t.utilityExportLimit),p=d,T=c(L,p),M=i-L)):(r.log("not enough PV to cover the load"),l<=0?(r.log("no PV power available"),a<u?(r.log("no PV power and ESS not charged"),e=-Math.min(h,(u-o)*t.granularity),n=0,w=c(e,n),L=i+Math.min(h,(u-o)*t.granularity),p=d,T=c(L,p),a=o+1/t.granularity*h,a>u&&(a=u)):(L=i,p=d),T=c(L,p)):(r.log("PV and utility both available"),i-l<h&&o/u>B?(M=l,e=Math.min(i-l,o*t.granularity),n=d,w=c(e,n),a=o-1/t.granularity*e,L=0,p=0):(M=l,L=i-l,p=d,T=c(L,p))))):(r.log("No utility power available"),t.gensetCount===0?(r.log("No gensets, only PV and energy storage"),f<t.totalFeederBreakers&&(r.log("activeFeederBreakers < variables.totalFeederBreakers"),(l-i>=R||o>0&&l+h-i>=R)&&O++),i<l?o<u?(n=d,e=-Math.min(l-i,h,(u-o)*t.granularity),w=c(e,n),a=o-1/t.granularity*e,a>u&&(a=u),M=i-e):(M=i,e=0,n=d,w=c(e,n)):(r.log("less PV than the load requires"),o<=0?(r.log("ESS is discharged, shed load"),O=Math.floor(l/R),M=i,e=0,n=d,w=c(e,n)):i>l+h||i>l+o*t.granularity?(r.log("not enough capacity between the PV and ESS to support the load, shed load"),O=Math.floor(Math.min(l+h,l+o*t.granularity)/R),M=l,e=Math.min(i-l,o*t.granularity),n=d,w=c(e,n),a=o-1/t.granularity*e):(r.log("PV and energy storage is sufficient to power load"),M=l,e=i-l,n=d,w=c(e,n),a=o-1/t.granularity*e))):t.gensetCount>0&&t.essModuleCount===0?(r.log("Generator sets only, no ESS"),s=i-l,f<t.totalFeederBreakers&&l+C-i>=R&&O++,s<=0?(P=1,M=Math.max(i-N,0),m=N,g=d,V=c(m,g)):(r.log("not enough PV to power load"),s>C&&(O=Math.floor((l+C)/R)),P=Math.min(t.gensetCount,Math.ceil(s/H)),m=Math.max(P*N,s),M=Math.max(i-m,0),g=d,V=c(m,g))):t.gensetCount>0&&t.essModuleCount>0&&(r.log("Gensets, PV, and energy storage"),o>0&&f<t.totalFeederBreakers?l+C+h-i>=R&&O++:f<t.totalFeederBreakers&&l+C-i>=R&&O++,s=i-l,s<=0?(r.log("more PV than the load requires, run on PV and ESS"),P=0,o<u?(n=d,e=-Math.min(l-i,h,(u-o)*t.granularity),w=c(e,n),a=o-1/t.granularity*e,a>u&&(a=u),M=i-e,m=0,g=0,V=0,a/u>U&&(A=1)):(r.log("ESS does not require charging"),M=i,e=0,n=d,w=c(e,n),m=0,m=0,g=0,V=0)):(r.log("PV does not have enough power to run the load, run on PV + genset and/or energy storage"),I===1?s<o*t.granularity&&s<h?(r.log("ESS can cover the load"),P=0,n=d,e=s,w=c(e,n),a=o-1/t.granularity*e,M=i-e,m=0,g=0,V=0,a/u<B&&(A=0)):(r.log("ESS can't cover complete load, use genset and/or ESS"),s>C+h&&s>C+o*t.granularity&&(O=Math.floor((l+C+h)/R)),P=Math.min(t.gensetCount,Math.ceil(s/H)),s/P<h&&s/P<o*t.granularity?(r.log("ESS can offset one genset"),P--,m=Math.max(N,s-h,s-o),g=d-d/P,V=c(m,g),e=s-m,n=d-g,w=c(e,n),a=o-1/t.granularity*e,a/u<B&&(A=0),M=i-m-e):s>C?(r.log("more power than the gensets can support, run ESS"),P=t.gensetCount,m=i-l-h,g=d*m/i,V=c(m,g),e=Math.min(h,o*t.granularity),n=d-g,w=c(e,n),a=o-1/t.granularity*e,a/u<B&&(A=0),M=i-m-e):(r.log("run on genset only and recharge the ESS"),P=Math.min(t.gensetCount,Math.ceil(s/H)),e=-Math.min(h,(u-o)*t.granularity,P*t.singleGensetPower-s),n=0,w=c(e,n),m=Math.max(P*N,s)-e,M=Math.max(i-m,0),g=d,V=c(m,g),a=o-1/t.granularity*e,a>u&&(a=u),o/u>U&&(A=1))):(r.log("ESS Charge State = 0, run on PV + Gensets"),s>C&&(o>0?(s>C+Math.min(h,o*t.granularity)&&(O=Math.floor(l+C+Math.min(h,o*t.granularity)/R)),P=t.gensetCount,m=i-l-Math.min(h,o),g=d*m/i,V=c(m,g),e=Math.min(h,o*t.granularity),n=d-g,w=c(e,n),a=o-1/t.granularity*e,a/u<B&&(A=0)):O=Math.floor(l+C/R)),P=Math.min(t.gensetCount,Math.ceil(s/H)),e=-Math.min(h,(u-o)*t.granularity,P*t.singleGensetPower-s),n=0,w=c(e,n),m=Math.max(P*N,s)-e,M=i-s,g=d,V=c(m,g),a=o-1/t.granularity*e,a>u&&(a=u),a/u>U&&(A=1))))),r.log("essRealPowerContribution: ",e),r.log("essReactivePowerContribution: ",n),r.log("newRemainingESSEnergy: ",a),r.log("newActiveFeederBreakers: ",O),r.log("gensetRealPowerRequirement: ",s),r.log("gensetsRequired: ",P),r.log("nextGensetOnlinePower: ",H),{index:y,activeFeederBreakers:O,remainingESSEnergy:a,totalESSEnergy:u,totalGensetPower:C,essChargeState:I,realLoad:i,loadPowerFactor:G,loadVariation:D,reactiveLoad:d,availablePVPower:l,providedPVPower:M,essReactivePowerContribution:n,essRealPowerContribution:e,essPowerFactor:w,utilityRealPowerContribution:L,utilityReactivePowerContribution:p,utilityPowerFactor:T,providedPVPower:M,gensetRealPowerContribution:m,gensetReactivePowerContribution:g,gensetPowerFactor:V,gensetsRequired:P,essChargeState:A}}})();
